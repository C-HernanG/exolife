[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "exolife"
version = "0.1.0"
description = "Predicting Exoplanet Habitability to Support Astrobiological Discovery"
authors = [
    {name = "Carlos HernÃ¡n Guirao", email = "carlos.hernangui@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["astronomy", "exoplanet", "machine-learning", "habitability"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy",
    "pandas",
    "polars",
    "scikit-learn",
    "matplotlib",
    "seaborn",
    "xgboost",
    "lightgbm",
    "astropy",
    "astroquery",
    "shap",
    "tqdm",
    "joblib",
    "requests",
    "pyyaml",
    "pydantic",
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "pytest",
    "pre-commit",
]
jupyter = [
    "jupyterlab",
    "ipykernel",
]

[project.scripts]
exolife = "exolife.cli:main"

[project.urls]
Homepage = "https://github.com/C-HernanG/exolife"
Repository = "https://github.com/C-HernanG/exolife"
Issues = "https://github.com/C-HernanG/exolife/issues"

[tool.setuptools.packages.find]
where = ["package"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["exolife"]
combine-as-imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
