# ExoLife Project Configuration
# This file serves as the single source of truth for all project dependencies.
#
# Installation examples:
# - Basic installation: pip install -e .
# - With dev tools: pip install -e .[dev]
# - With jupyter: pip install -e .[jupyter]
# - With all dependencies: pip install -e .[all]

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "exolife"
version = "0.1.0"
description = "Predicting Exoplanet Habitability to Support Astrobiological Discovery"
authors = [
    {name = "Carlos HernÃ¡n Guirao", email = "carlos.hernangui@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["astronomy", "exoplanet", "machine-learning", "habitability"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "polars>=0.18.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "xgboost>=1.7.0",
    "lightgbm>=3.3.0",
    "astropy>=5.0.0",
    "astroquery>=0.4.6",
    "shap>=0.41.0",
    "tqdm>=4.64.0",
    "joblib>=1.2.0",
    "requests>=2.28.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "click>=8.0.0",
    "pyarrow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.0.0",
]
jupyter = [
    "jupyterlab>=4.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.5.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
]
# Convenience group that includes all optional dependencies
all = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pre-commit>=3.0.0",
    "jupyterlab>=4.0.0",
    "ipykernel>=6.0.0",
    "notebook>=6.5.0",
]

[project.scripts]
exolife = "exolife.cli:main"

[project.urls]
Homepage = "https://github.com/C-HernanG/exolife"
Repository = "https://github.com/C-HernanG/exolife"
Issues = "https://github.com/C-HernanG/exolife/issues"

[tool.setuptools.packages.find]
where = ["package"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E203", "E501"]

[tool.ruff.lint.isort]
known-first-party = ["exolife"]
combine-as-imports = true

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output formatting and behavior
addopts = [
    "-v",                    # verbose output
    "--tb=short",           # short traceback format
    "--strict-markers",     # ensure all markers are defined
    "--strict-config",      # strict configuration validation
    "--disable-warnings",   # disable warning summary
]

# Test markers for categorization
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "network: marks tests that require network access",
    "data: marks tests that work with data files",
]

# Minimum pytest version
minversion = "7.0"

# Warning filters
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:astropy.*",
    "ignore::UserWarning:numpy.*",
]

# Logging configuration
log_cli = false
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
